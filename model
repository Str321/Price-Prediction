import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import sklearn
import math
import pickle
from sklearn.compose import make_column_transformer
from sklearn.pipeline import make_pipeline
from sklearn.preprocessing import FunctionTransformer,StandardScaler,MinMaxScaler,OneHotEncoder,OrdinalEncoder
from sklearn.model_selection import train_test_split,cross_val_score
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import r2_score,mean_squared_error
from sklearn.linear_model import LinearRegression,Lasso,Ridge
from sklearn.tree import DecisionTreeRegressor
from xgboost import XGBRegressor

d1=pd.read_csv('trainingcar-Copy1.csv')
d2=pd.read_csv('my_test_car-Copy1.csv')

l=[d1,d2]

# data cleaning

data=pd.concat(l,axis=0,ignore_index=True)

data.drop(columns=['Unnamed: 0' ],inplace=True)

data['fuel_type'].fillna('CNG',inplace=True)

data['kms_driven']=data['kms_driven'].str.replace(',','')
data['kms_driven']=pd.to_numeric(data['kms_driven'])

data['price_in_lakhs']=data['price_in_lakhs'].str.replace(',','')
data['price_in_lakhs']=pd.to_numeric(data['price_in_lakhs'])
data['price_in_lakhs']=data['price_in_lakhs']*100000

data=data[data['fuel_type']!='Hybrid']

data['name']=data['name'].str.split(" ").str.slice(0,3).str.join(' ').str.lower()

# removing outliers

data=data[data['price_in_lakhs']<6e6]

data=data[data['kms_driven']>15000]
data=data[data['kms_driven']<620000]

data=data[data['model']>2005] 

data=data[data['kms_driven']<230000]

data['years old']=2022-data['model']

data['fuel_type']=data['fuel_type'].str.lower()

data['fuel_type'].replace(['cng', 'cngpetrol', 'diesel', 'lpg', 'petrol'],[2,3,1,4,0],inplace=True)

data['location']=data['location'].str.lower()

data.reset_index(inplace=True)

data.drop(columns=['model','index'],inplace=True)

# Encoding data

ohe=OneHotEncoder()
ohe.fit(data[['name','location']])

cl_trf=make_column_transformer((OneHotEncoder(categories=ohe.categories_),['name','location']),
                              #(OrdinalEncoder(['Petrol', 'Diesel', 'CNG', 'LPG', 'CNGPetrol']),['fuel_type']),
                              #(MinMaxScaler,['kms_driven']),
                               (FunctionTransformer(func=np.log1p),['kms_driven']),
                               remainder='passthrough')



fn=FunctionTransformer(func=np.log1p)
rf=RandomForestRegressor()
lr=LinearRegression()
dt=DecisionTreeRegressor()
xg=XGBRegressor()
ls=Lasso()
rg=Ridge()

train,test=train_test_split(data,test_size=0.2,random_state=159)
# make pipeline

pipe=make_pipeline(cl_trf,lr)

# train data
x=train.drop(columns=['price_in_lakhs'])
y=train['price_in_lakhs']
fn=FunctionTransformer(func=np.log1p)
y_fn=fn.fit_transform(y)

# test data
x_ts=test.drop(columns=['price_in_lakhs'])
y_ts=test['price_in_lakhs']
y_fs=fn.fit_transform(y_ts)

pipe.fit(x,y_fn)

pred=pipe.predict(x_ts)

r2_score(pred,y_fs),np.sqrt(mean_squared_error(pred,y_fs))

# SCORES FOR UNSEEN DATA

R2_SCORE :0.8769201562105494
MEAN SQUARED ERROR: 0.1767987652892182
